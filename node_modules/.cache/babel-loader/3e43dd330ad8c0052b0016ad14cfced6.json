{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sources\\\\fpt\\\\src\\\\page\\\\Search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport ReactPaginate from 'react-paginate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst queryString = require('query-string');\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = () => {\n      this.loadData();\n      const parsed = queryString.parse(this.props.location.search);\n      const keyword = parsed.query || '';\n\n      if (!keyword) {\n        this.props.history.push('/');\n      }\n\n      const token = localStorage.getItem('token') || '';\n      console.log('check', token);\n\n      if (!token) {\n        this.props.history.push('/login');\n      }\n    };\n\n    this.loadData = async () => {\n      const url = `https://d2irr0mp54galb.cloudfront.net/cms/read/en-AU`;\n      let result = await axios({\n        method: 'post',\n        url,\n        data: {\n          operationName: 'ListBlogPosts',\n          query: `query ListBlogPosts {\n            listBlogPosts(\n              limit: 2\n              sort: postDate_DESC\n              after: \"\"\n            ) {\n              data {\n                content\n                slug\n                title\n                thumbnail\n              }\n              meta {\n                totalCount\n                hasMoreItems\n                cursor\n              }\n             }\n            }`\n        },\n        headers: {\n          Authorization: `a67550392f105ba5ecb8765d866b06a2735f96269b96767c`,\n          'Content-Type': 'application/json'\n        }\n      });\n      result = result.data;\n      const {\n        data: {\n          listBlogPosts: {\n            data,\n            meta\n          }\n        }\n      } = result;\n      console.log('meta', meta);\n      const {\n        totalCount\n      } = this.state;\n      this.setState({\n        listData: data,\n        pageCount: Math.ceil(this.state.totalCount / this.state.perPage)\n      });\n    };\n\n    this.handlePageClick = () => {\n      this.loadData();\n    };\n\n    this.state = {\n      listData: [],\n      perPage: 2,\n      currentPage: 0,\n      totalCount: 20\n    };\n  }\n\n  render() {\n    const {\n      listData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [listData.map((post, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: [post.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.thumbnail,\n            style: {\n              maxWidth: 200\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n        previousLabel: 'prev',\n        nextLabel: 'next',\n        breakLabel: '...',\n        breakClassName: 'break-me',\n        pageCount: this.state.pageCount,\n        marginPagesDisplayed: 2,\n        pageRangeDisplayed: 5,\n        onPageChange: this.handlePageClick,\n        containerClassName: 'pagination',\n        subContainerClassName: 'pages pagination',\n        activeClassName: 'active'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"names":["React","axios","ReactPaginate","queryString","require","Search","Component","constructor","props","componentDidMount","loadData","parsed","parse","location","search","keyword","query","history","push","token","localStorage","getItem","console","log","url","result","method","data","operationName","headers","Authorization","listBlogPosts","meta","totalCount","state","setState","listData","pageCount","Math","ceil","perPage","handlePageClick","currentPage","render","map","post","i","title","thumbnail","maxWidth"],"sources":["D:/Sources/fpt/src/page/Search.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport ReactPaginate from 'react-paginate';\r\nconst queryString = require('query-string');\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: [],\r\n      perPage: 2,\r\n      currentPage: 0,\r\n      totalCount: 20,\r\n\r\n     \r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.loadData();\r\n\r\n    const parsed = queryString.parse(this.props.location.search);\r\n    const keyword = parsed.query || '';\r\n    if (!keyword) {\r\n      this.props.history.push('/');\r\n    }\r\n    const token = localStorage.getItem('token') || '';\r\n    console.log('check', token);\r\n\r\n    if (!token) {\r\n      this.props.history.push('/login');\r\n    }\r\n  };\r\n\r\n  loadData = async () => {\r\n    const url = `https://d2irr0mp54galb.cloudfront.net/cms/read/en-AU`;\r\n\r\n    let result = await axios({\r\n      method: 'post',\r\n      url,\r\n      data: {\r\n        operationName: 'ListBlogPosts',\r\n        query: `query ListBlogPosts {\r\n            listBlogPosts(\r\n              limit: 2\r\n              sort: postDate_DESC\r\n              after: \"\"\r\n            ) {\r\n              data {\r\n                content\r\n                slug\r\n                title\r\n                thumbnail\r\n              }\r\n              meta {\r\n                totalCount\r\n                hasMoreItems\r\n                cursor\r\n              }\r\n             }\r\n            }`,\r\n      },\r\n      headers: {\r\n        Authorization: `a67550392f105ba5ecb8765d866b06a2735f96269b96767c`,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    result = result.data;\r\n    const {\r\n      data: {\r\n        listBlogPosts: { data, meta },\r\n      },\r\n    } = result;\r\n\r\n    console.log('meta', meta);\r\n    const { totalCount } = this.state;\r\n    this.setState({\r\n      listData: data,\r\n\r\n      pageCount: Math.ceil(this.state.totalCount / this.state.perPage),\r\n    });\r\n  };\r\n\r\n  handlePageClick = () => {\r\n    this.loadData();\r\n  };\r\n\r\n  render() {\r\n    const { listData } = this.state;\r\n\r\n    return (\r\n      <div className='container'>\r\n        {listData.map((post, i) => {\r\n          return (\r\n            <div className='content' key={i}>\r\n              {post.title}\r\n              <br />\r\n              <img src={post.thumbnail} style={{ maxWidth: 200 }} />\r\n            </div>\r\n          );\r\n        })}\r\n        <br></br>\r\n\r\n        <ReactPaginate\r\n          previousLabel={'prev'}\r\n          nextLabel={'next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={this.state.pageCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={this.handlePageClick}\r\n          containerClassName={'pagination'}\r\n          subContainerClassName={'pages pagination'}\r\n          activeClassName={'active'}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}