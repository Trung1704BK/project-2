{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sources\\\\fpt\\\\src\\\\page\\\\Search.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst queryString = require('query-string');\n\nclass Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.componentDidMount = async () => {\n      const parsed = queryString.parse(this.props.location.search);\n      const keyword = parsed.query || ''; // if (!keyword) {\n      //   this.props.history.push('/');\n      // }\n\n      const token = localStorage.getItem('token') || '';\n      console.log('check', token);\n\n      if (!token) {\n        this.props.history.push('/login');\n      }\n\n      const url = `https://d2irr0mp54galb.cloudfront.net/cms/read/en-AU`;\n      let result = await axios({\n        method: 'post',\n        url,\n        data: {\n          operationName: 'ListBlogPosts',\n          query: 'query ListBlogPosts {\\n  listBlogPosts(\\n    limit: 12\\n    sort: postDate_DESC\\n    where: {country: {id_in: [\"62acc4fbd95fb30009606999#0002\"]}}\\n    after: \"WyIxNjU1NDkwNjUyMDAwIl0=\"\\n  ) {\\n    data {\\n      content\\n      city {\\n        createdOn\\n        entryId\\n        id\\n        name\\n        public\\n        savedOn\\n        country {\\n          code\\n          createdOn\\n          flag\\n          entryId\\n          id\\n          name\\n          public\\n          savedOn\\n          _typename\\n        }\\n        _typename\\n      }\\n      country {\\n        code\\n        createdOn\\n        entryId\\n        flag\\n        name\\n        id\\n        public\\n        savedOn\\n        _typename\\n      }\\n      createdOn\\n      description\\n      entryId\\n      id\\n      postDate\\n      public\\n      savedOn\\n      thumbnail\\n      title\\n      topic {\\n        createdOn\\n        entryId\\n        id\\n        order\\n        public\\n        savedOn\\n        slug\\n        title\\n        _typename\\n      }\\n      _typename\\n    }\\n    meta {\\n      totalCount\\n      hasMoreItems\\n      cursor\\n      _typename\\n    }\\n    __typename\\n  }\\n}\\n'\n        },\n        headers: {\n          Authorization: `a67550392f105ba5ecb8765d866b06a2735f96269b96767`\n        }\n      });\n      result = result.data;\n      console.log('result', result); // this.setState({\n      //   listData: res.data,\n      // });\n    };\n\n    this.state = {\n      listData: []\n    };\n  }\n\n  render() {\n    const {\n      listData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: listData.map(value => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content\",\n          children: value.data\n        }, value.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Search;","map":{"version":3,"names":["React","axios","queryString","require","Search","Component","constructor","props","componentDidMount","parsed","parse","location","search","keyword","query","token","localStorage","getItem","console","log","history","push","url","result","method","data","operationName","headers","Authorization","state","listData","render","map","value","id"],"sources":["D:/Sources/fpt/src/page/Search.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nconst queryString = require('query-string');\r\n\r\nclass Search extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = async () => {\r\n    const parsed = queryString.parse(this.props.location.search);\r\n    const keyword = parsed.query || '';\r\n    // if (!keyword) {\r\n    //   this.props.history.push('/');\r\n    // }\r\n\r\n    const token = localStorage.getItem('token') || '';\r\n    console.log('check', token);\r\n\r\n    if (!token) {\r\n      this.props.history.push('/login');\r\n    }\r\n    const url = `https://d2irr0mp54galb.cloudfront.net/cms/read/en-AU`;\r\n\r\n    let result = await axios({\r\n      method: 'post',\r\n      url,\r\n      data: {\r\n        operationName: 'ListBlogPosts',\r\n        query:\r\n          'query ListBlogPosts {\\n  listBlogPosts(\\n    limit: 12\\n    sort: postDate_DESC\\n    where: {country: {id_in: [\"62acc4fbd95fb30009606999#0002\"]}}\\n    after: \"WyIxNjU1NDkwNjUyMDAwIl0=\"\\n  ) {\\n    data {\\n      content\\n      city {\\n        createdOn\\n        entryId\\n        id\\n        name\\n        public\\n        savedOn\\n        country {\\n          code\\n          createdOn\\n          flag\\n          entryId\\n          id\\n          name\\n          public\\n          savedOn\\n          _typename\\n        }\\n        _typename\\n      }\\n      country {\\n        code\\n        createdOn\\n        entryId\\n        flag\\n        name\\n        id\\n        public\\n        savedOn\\n        _typename\\n      }\\n      createdOn\\n      description\\n      entryId\\n      id\\n      postDate\\n      public\\n      savedOn\\n      thumbnail\\n      title\\n      topic {\\n        createdOn\\n        entryId\\n        id\\n        order\\n        public\\n        savedOn\\n        slug\\n        title\\n        _typename\\n      }\\n      _typename\\n    }\\n    meta {\\n      totalCount\\n      hasMoreItems\\n      cursor\\n      _typename\\n    }\\n    __typename\\n  }\\n}\\n',\r\n      },\r\n      headers: {\r\n        Authorization: `a67550392f105ba5ecb8765d866b06a2735f96269b96767`,\r\n        \r\n      },\r\n    });\r\n\r\n    result = result.data;\r\n    console.log('result', result);\r\n\r\n    // this.setState({\r\n    //   listData: res.data,\r\n    // });\r\n  };\r\n\r\n  render() {\r\n    const { listData } = this.state;\r\n    return (\r\n      <div className='container'>\r\n        {/* {listData.map((value) => {\r\n          return (\r\n            <div className='content' key={value.id}>\r\n              {value.title}\r\n            </div>\r\n          );\r\n        })} */}\r\n        {listData.map((value) => {\r\n          return (\r\n            <div className='content' key={value.id}>\r\n              {value.data}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,WAAW,GAAGC,OAAO,CAAC,cAAD,CAA3B;;AAEA,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAAqC;EACnCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;;IADiB,KAOnBC,iBAPmB,GAOC,YAAY;MAC9B,MAAMC,MAAM,GAAGP,WAAW,CAACQ,KAAZ,CAAkB,KAAKH,KAAL,CAAWI,QAAX,CAAoBC,MAAtC,CAAf;MACA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,KAAP,IAAgB,EAAhC,CAF8B,CAG9B;MACA;MACA;;MAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,KAAiC,EAA/C;MACAC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;;MAEA,IAAI,CAACA,KAAL,EAAY;QACV,KAAKR,KAAL,CAAWa,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;MACD;;MACD,MAAMC,GAAG,GAAI,sDAAb;MAEA,IAAIC,MAAM,GAAG,MAAMtB,KAAK,CAAC;QACvBuB,MAAM,EAAE,MADe;QAEvBF,GAFuB;QAGvBG,IAAI,EAAE;UACJC,aAAa,EAAE,eADX;UAEJZ,KAAK,EACH;QAHE,CAHiB;QAQvBa,OAAO,EAAE;UACPC,aAAa,EAAG;QADT;MARc,CAAD,CAAxB;MAcAL,MAAM,GAAGA,MAAM,CAACE,IAAhB;MACAP,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBI,MAAtB,EA9B8B,CAgC9B;MACA;MACA;IACD,CA1CkB;;IAEjB,KAAKM,KAAL,GAAa;MACXC,QAAQ,EAAE;IADC,CAAb;EAGD;;EAuCDC,MAAM,GAAG;IACP,MAAM;MAAED;IAAF,IAAe,KAAKD,KAA1B;IACA,oBACE;MAAK,SAAS,EAAC,WAAf;MAAA,UAQGC,QAAQ,CAACE,GAAT,CAAcC,KAAD,IAAW;QACvB,oBACE;UAAK,SAAS,EAAC,SAAf;UAAA,UACGA,KAAK,CAACR;QADT,GAA8BQ,KAAK,CAACC,EAApC;UAAA;UAAA;UAAA;QAAA,QADF;MAKD,CANA;IARH;MAAA;MAAA;MAAA;IAAA,QADF;EAkBD;;AAjEkC;;AAoErC,eAAe9B,MAAf"},"metadata":{},"sourceType":"module"}