{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sources\\\\fpt\\\\src\\\\page\\\\Pagination.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pagination extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getData = async () => {\n      const url = `http://localhost/php_api/users/list.php/${page}&${limit}`;\n      let result = await axios({\n        method: 'get',\n        url,\n        total: '',\n        data: [],\n        headers: {\n          Authorization: ``,\n          'Content-Type': 'application/json'\n        }\n      });\n      result = result.data;\n      console.log('checked', result);\n      this.setState({\n        listData: result.data\n      });\n    };\n\n    this.loadMore = () => {\n      this.getData(false);\n    };\n\n    this.gotoPage = page => {\n      this.getData(true);\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.nextPage = maxPage => {\n      let {\n        currentPage\n      } = this.state;\n      currentPage++;\n\n      if (currentPage > maxPage) {\n        return false;\n      }\n\n      this.setState({\n        currentPage\n      });\n      this.getData(true);\n    };\n\n    this.state = {\n      limit: 5,\n      listData: [],\n      total: 0,\n      currentPage: 1\n    };\n  }\n\n  componentDidMount() {\n    this.getData(true);\n  } // getData() {\n  //   const { page } = this.state;\n  //   this.setState({\n  //     listData: [],\n  //   });\n  //   axios.get(`http://localhost/php_api/users/pagination.php/${page}`)\n  //     .then((res) => {\n  //       console.log('check', res.data);\n  //       this.setState({\n  //         listData: res.data.data,\n  //       });\n  //     })\n  //     .catch((e) => {\n  //       console.error(e);\n  //     });\n  // }\n\n\n  render() {\n    const {\n      listData,\n      total,\n      limit\n    } = this.state;\n    console.log('total', total);\n    console.log('limit', limit);\n    const extraPage = total % limit > 0 ? 1 : 0;\n    const maxPage = Math.floor(total / limit) + extraPage;\n    console.log('maxPage', maxPage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-bordered\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Content\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Author\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), listData.map((post, i) => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"content\",\n              children: post.email\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.nextPage(max),\n          children: \"next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Pagination;","map":{"version":3,"names":["React","axios","Pagination","Component","constructor","props","getData","url","page","limit","result","method","total","data","headers","Authorization","console","log","setState","listData","loadMore","gotoPage","currentPage","nextPage","maxPage","state","componentDidMount","render","extraPage","Math","floor","map","post","i","email","max"],"sources":["D:/Sources/fpt/src/page/Pagination.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nclass Pagination extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      limit: 5,\r\n      listData: [],\r\n      total: 0,\r\n      currentPage: 1,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getData(true);\r\n  }\r\n\r\n  // getData() {\r\n  //   const { page } = this.state;\r\n  //   this.setState({\r\n  //     listData: [],\r\n  //   });\r\n  //   axios.get(`http://localhost/php_api/users/pagination.php/${page}`)\r\n  //     .then((res) => {\r\n  //       console.log('check', res.data);\r\n  //       this.setState({\r\n  //         listData: res.data.data,\r\n  //       });\r\n  //     })\r\n  //     .catch((e) => {\r\n  //       console.error(e);\r\n  //     });\r\n  // }\r\n\r\n  getData = async () => {\r\n    const url = `http://localhost/php_api/users/list.php/${page}&${limit}`;\r\n\r\n    let result = await axios({\r\n      method: 'get',\r\n      url,\r\n      total: '',\r\n      data: [],\r\n      headers: {\r\n        Authorization: ``,\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    result = result.data;\r\n    console.log('checked', result);\r\n    this.setState({\r\n      listData: result.data,\r\n    });\r\n  };\r\n\r\n  loadMore = () => {\r\n    this.getData(false);\r\n  };\r\n\r\n  gotoPage = (page) => {\r\n    this.getData(true);\r\n    this.setState({\r\n      currentPage: page,\r\n    });\r\n  };\r\n\r\n  nextPage = (maxPage) => {\r\n    let { currentPage } = this.state;\r\n    currentPage++;\r\n    if (currentPage > maxPage) {\r\n      return false;\r\n    }\r\n    this.setState({\r\n      currentPage,\r\n    });\r\n    this.getData(true);\r\n  };\r\n\r\n  render() {\r\n    const { listData, total, limit } = this.state;\r\n    console.log('total', total);\r\n    console.log('limit', limit);\r\n    const extraPage = total % limit > 0 ? 1 : 0;\r\n    const maxPage = Math.floor(total / limit) + extraPage;\r\n    console.log('maxPage', maxPage);\r\n\r\n    return (\r\n      <div>\r\n        <table className='table table-bordered'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Title</th>\r\n              <th>Content</th>\r\n              <th>Author</th>\r\n            </tr>\r\n\r\n            {listData.map((post, i) => {\r\n              return (\r\n                <div className='content' key={i}>\r\n                  {post.email}\r\n                </div>\r\n              );\r\n            })}\r\n          </thead>\r\n\r\n          <button onClick={this.nextPage(max)}>next</button>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Pagination;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}