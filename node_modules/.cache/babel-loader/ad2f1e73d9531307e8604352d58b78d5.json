{"ast":null,"code":"var _jsxFileName = \"D:\\\\Sources\\\\fpt\\\\src\\\\page\\\\Pagination.js\";\n// import React from 'react';\n// import axios from 'axios';\n// class Pagination extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       currentPage: 1,\n//       limit: 5,\n//       posts: [],\n//     };\n//   }\n//   async componentDidMount() {\n//     let res = await axios.get('http://localhost/php_api/users/pagination.php');\n//     console.log('check', this.setState);\n//     this.setState({\n//       posts: res.data.data,\n//     });\n//   }\n//   render() {\n//     const { posts, limit, currentPage } = this.state;\n//     const indexOfLastPost = currentPage * limit;\n//     const indexOfFirstPost = indexOfLastPost - limit;\n//     const currentPosts = this.state.posts.slice(\n//       indexOfFirstPost,\n//       indexOfLastPost\n//     );\n//     //Implement page numbers\n//     const pageNumbers = [];\n//     for (\n//       let i = 1;\n//       i <= Math.ceil(this.state.posts.length / this.state.postsPerPage);\n//       i++\n//     ) {\n//       pageNumbers.push(i);\n//     }\n//     //Set current page\n//     const setPage = (pageNum) => {\n//       this.setState({ currentPage: pageNum });\n//     };\n//     return (\n//       <div>\n//         <table className='table table-bordered'>\n//           <thead>\n//             <tr>\n//               <th>ID</th>\n//               <th>Title</th>\n//               <th>Content</th>\n//               <th>Author</th>\n//             </tr>\n//           </thead>\n//           <tbody>\n//             {posts.map((post) => (\n//               <tr key={post.id}>\n//                 <td>{post.email}</td>\n//                 <td>{post.pass}</td>\n//               </tr>\n//             ))}\n//           </tbody>\n//           <div className='w-full flex justify-around'>\n//             {pageNumbers.map((pageNum, index) => (\n//               <span\n//                 key={index}\n//                 className={\n//                   pageNum === this.state.currentPage\n//                     ? 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full bg-blue-500 text-white'\n//                     : 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full'\n//                 }\n//                 onClick={() => {\n//                   setPage(pageNum);\n//                 }}\n//               >\n//                 {pageNum}\n//               </span>\n//             ))}\n//           </div>\n//         </table>\n//       </div>\n//     );\n//   }\n// }\n// export default Pagination;\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentPage: 1,\n      //Holds the value for the current page\n      posts: [],\n      //Array where the data is stored\n      loading: null,\n      //Holds the value for the loading state.. can either be true or false\n      postsPerPage: 5 //Holds the value for the number of posts per page. You can adjust to suit your needs\n\n    };\n  } //Fetch data on component mount\n\n\n  async componentDidMount() {\n    let res = await axios.get('http://localhost/php_api/users/pagination.php');\n    console.log('check', this.setState);\n    this.setState({\n      posts: res.data.data\n    });\n  }\n\n  render() {\n    //Get currentPosts\n    const indexOfLastPost = this.state.currentPage * this.state.postsPerPage;\n    const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\n    const currentPosts = this.state.posts.slice(indexOfFirstPost, indexOfLastPost); //Implement page numbers\n\n    const pageNumbers = [];\n\n    for (let i = 1; i <= Math.ceil(this.state.posts.length / this.state.postsPerPage); i++) {\n      pageNumbers.push(i);\n    } //Set current page\n\n\n    const setPage = pageNum => {\n      this.setState({\n        currentPage: pageNum\n      });\n    };\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-4/5 mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl text-center font-bold\",\n        children: \"React Pagination Using Class Components and Tailwind CSS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), this.state.loading === true ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full h-screen flex items-center justify-center\",\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          type: \"BallTriangle\",\n          color: \"#00BFFF\",\n          height: 100,\n          width: 100\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this) : currentPosts.map((post, id) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-2 border-blue-500 rounded m-4 p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-bold\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full flex justify-around\",\n        children: pageNumbers.map((pageNum, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n          className: pageNum === this.state.currentPage ? 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full bg-blue-500 text-white' : 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full',\n          onClick: () => {\n            setPage(pageNum);\n          },\n          children: pageNum\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Pagination;","map":{"version":3,"names":["React","Component","axios","Pagination","constructor","props","state","currentPage","posts","loading","postsPerPage","componentDidMount","res","get","console","log","setState","data","render","indexOfLastPost","indexOfFirstPost","currentPosts","slice","pageNumbers","i","Math","ceil","length","push","setPage","pageNum","map","post","id","title","body","index"],"sources":["D:/Sources/fpt/src/page/Pagination.js"],"sourcesContent":["// import React from 'react';\r\n// import axios from 'axios';\r\n// class Pagination extends React.Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n//     this.state = {\r\n//       currentPage: 1,\r\n//       limit: 5,\r\n//       posts: [],\r\n//     };\r\n//   }\r\n\r\n//   async componentDidMount() {\r\n//     let res = await axios.get('http://localhost/php_api/users/pagination.php');\r\n//     console.log('check', this.setState);\r\n//     this.setState({\r\n//       posts: res.data.data,\r\n//     });\r\n//   }\r\n\r\n//   render() {\r\n//     const { posts, limit, currentPage } = this.state;\r\n//     const indexOfLastPost = currentPage * limit;\r\n//     const indexOfFirstPost = indexOfLastPost - limit;\r\n//     const currentPosts = this.state.posts.slice(\r\n//       indexOfFirstPost,\r\n//       indexOfLastPost\r\n//     );\r\n\r\n//     //Implement page numbers\r\n//     const pageNumbers = [];\r\n\r\n//     for (\r\n//       let i = 1;\r\n//       i <= Math.ceil(this.state.posts.length / this.state.postsPerPage);\r\n//       i++\r\n//     ) {\r\n//       pageNumbers.push(i);\r\n//     }\r\n\r\n//     //Set current page\r\n//     const setPage = (pageNum) => {\r\n//       this.setState({ currentPage: pageNum });\r\n//     };\r\n//     return (\r\n//       <div>\r\n//         <table className='table table-bordered'>\r\n//           <thead>\r\n//             <tr>\r\n//               <th>ID</th>\r\n//               <th>Title</th>\r\n//               <th>Content</th>\r\n//               <th>Author</th>\r\n//             </tr>\r\n//           </thead>\r\n//           <tbody>\r\n//             {posts.map((post) => (\r\n//               <tr key={post.id}>\r\n//                 <td>{post.email}</td>\r\n//                 <td>{post.pass}</td>\r\n//               </tr>\r\n//             ))}\r\n//           </tbody>\r\n//           <div className='w-full flex justify-around'>\r\n//             {pageNumbers.map((pageNum, index) => (\r\n//               <span\r\n//                 key={index}\r\n//                 className={\r\n//                   pageNum === this.state.currentPage\r\n//                     ? 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full bg-blue-500 text-white'\r\n//                     : 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full'\r\n//                 }\r\n//                 onClick={() => {\r\n//                   setPage(pageNum);\r\n//                 }}\r\n//               >\r\n//                 {pageNum}\r\n//               </span>\r\n//             ))}\r\n//           </div>\r\n//         </table>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n// export default Pagination;\r\n\r\nimport React, { Component } from 'react';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Pagination extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentPage: 1, //Holds the value for the current page\r\n      posts: [], //Array where the data is stored\r\n      loading: null, //Holds the value for the loading state.. can either be true or false\r\n      postsPerPage: 5, //Holds the value for the number of posts per page. You can adjust to suit your needs\r\n    };\r\n  }\r\n\r\n  //Fetch data on component mount\r\n  async componentDidMount() {\r\n    let res = await axios.get('http://localhost/php_api/users/pagination.php');\r\n    console.log('check', this.setState);\r\n    this.setState({\r\n      posts: res.data.data,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //Get currentPosts\r\n    const indexOfLastPost = this.state.currentPage * this.state.postsPerPage;\r\n    const indexOfFirstPost = indexOfLastPost - this.state.postsPerPage;\r\n    const currentPosts = this.state.posts.slice(\r\n      indexOfFirstPost,\r\n      indexOfLastPost\r\n    );\r\n\r\n    //Implement page numbers\r\n    const pageNumbers = [];\r\n\r\n    for (\r\n      let i = 1;\r\n      i <= Math.ceil(this.state.posts.length / this.state.postsPerPage);\r\n      i++\r\n    ) {\r\n      pageNumbers.push(i);\r\n    }\r\n\r\n    //Set current page\r\n    const setPage = (pageNum) => {\r\n      this.setState({ currentPage: pageNum });\r\n    };\r\n\r\n    return (\r\n      <div className='w-4/5 mx-auto'>\r\n        <h2 className='text-2xl text-center font-bold'>\r\n          React Pagination Using Class Components and Tailwind CSS\r\n        </h2>\r\n        <hr />\r\n\r\n        {this.state.loading === true ? (\r\n          <div className='w-full h-screen flex items-center justify-center'>\r\n            <Loader\r\n              type='BallTriangle'\r\n              color='#00BFFF'\r\n              height={100}\r\n              width={100}\r\n            />\r\n          </div>\r\n        ) : (\r\n          currentPosts.map((post, id) => (\r\n            <div key={id} className='border-2 border-blue-500 rounded m-4 p-4'>\r\n              <div className='text-lg font-bold'>{post.title}</div>\r\n              <div className='mt-2'>{post.body}</div>\r\n            </div>\r\n          ))\r\n        )}\r\n\r\n        <div className='w-full flex justify-around'>\r\n          {pageNumbers.map((pageNum, index) => (\r\n            <span\r\n              key={index}\r\n              className={\r\n                pageNum === this.state.currentPage\r\n                  ? 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full bg-blue-500 text-white'\r\n                  : 'cursor-pointer flex items-center justify-center w-12 h-12 border-2 rounded-full'\r\n              }\r\n              onClick={() => {\r\n                setPage(pageNum);\r\n              }}\r\n            >\r\n              {pageNum}\r\n            </span>\r\n          ))}\r\n        </div>\r\n\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pagination;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}